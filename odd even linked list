/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head==NULL)
		return NULL;
	ListNode* odd_head=NULL;
	ListNode* odd_tail=NULL;
	ListNode* even_head=NULL;
	ListNode* even_tail=NULL;
	ListNode* tmp=head;
	bool is_odd=1;
	while(tmp!=NULL)
	{
		if(is_odd)
		{
			if(odd_head==NULL)
			{
				odd_head=odd_tail=tmp;
			}
			else{
				odd_tail->next=tmp;
				odd_tail=tmp;
			}
			tmp=tmp->next;
			odd_tail->next=NULL;
		}
		else{
			if(even_head==NULL)
			{
				even_head=even_tail=tmp;
			}
			else{
				even_tail->next=tmp;
				even_tail=tmp;
			}
			tmp=tmp->next;
			even_tail->next=NULL;
		}
		is_odd=!is_odd;
	}
	odd_tail->next=even_head;
	return odd_head;

    }
};
